name: CD
run-name: ${{ github.actor }} is running the CD ‚öôÔ∏è
on:
  # Runs this everytime a PR is merged against main
  push:
    branches:
      - main

jobs:
    build-lint-test-deploy:
        runs-on: ubuntu-latest
        steps:
          # Fetches the GitHub repository files
          - name: Check out repository code 
            uses: actions/checkout@v4

          # Popular community-maintained action used to set up Flutter in GitHub workflows. 
          # Installs Flutter and allows you to run commands like flutter build, flutter test, and flutter analyze within your CI/CD pipeline.
          - name: Setup Flutter 
            uses: subosito/flutter-action@v2
            with:
              channel: 'stable'

          # Build app for web
          - name: Build flutter app for web üõú
            run: flutter build web

          # Commit the changes to the client repository
          - name: Setup git credentials
            run: |
              git config --global user.email "teste@gmail.com"
              git config --global user.name "teste"
          
          - name: Add client repository as remote
            run: |
              git remote add client https://x-access-token:${{ secrets.CLIENT_REPO_TOKEN }}@github.com/DaniCFrq/cicd-clientrepo.git

          - name: Push changes to client repository
            run: |
              git push client HEAD:main
          
          # Authenticates in GCP with the provided user credentials.
          # Provides secure, temporary credentials for GCP.
          # Supports authentication using Service Account Key JSONs (less secure, legacy method).
          # - name: Authenticate with GCP 
          #   uses: google-github-actions/auth@v1
          #   with:
          #     credentials_json: ${{ secrets.GCP_SA_KEY }}

          # Set the default GCP project for subsequent gcloud commands in your environment. 
          # - name: Configure GCP Project
          #   run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

          # Configure Docker authentication for interacting with Artifact Registry, allowing you to push or pull Docker images securely.
          # Build the docker image and push top artifact registry.
          # - name: Build and Push Docker Image üê≥
          #   run: |
          #     gcloud auth configure-docker --quiet
          #     gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
          
          - name: This will be your CD ‚öôÔ∏è
            run: echo "This will be your CD ‚öôÔ∏è"
